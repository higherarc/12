// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  assignedTasks TaskAssignee[]
  createdTasks  Task[]         @relation("TaskCreator")

  @@map("users")
}

model Category {
  id          String   @id @default(cuid())
  name        String
  color       String   @default("#3B82F6")
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  tasks Task[]

  @@map("categories")
}

model Task {
  id          String   @id @default(cuid())
  title       String
  description String?
  isCompleted Boolean  @default(false)
  isToday     Boolean  @default(false)
  priority    Priority @default(MEDIUM)
  dueDate     DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  completedAt DateTime?

  // Relations
  categoryId String?
  category   Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  creatorId  String
  creator    User      @relation("TaskCreator", fields: [creatorId], references: [id])
  assignees  TaskAssignee[]
  repeatRule RepeatRule?

  @@map("tasks")
}

model TaskAssignee {
  id     String @id @default(cuid())
  taskId String
  userId String

  // Relations
  task Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([taskId, userId])
  @@map("task_assignees")
}

model RepeatRule {
  id       String      @id @default(cuid())
  type     RepeatType
  interval Int         @default(1)
  days     String?     // JSON array of days for weekly repeat
  endDate  DateTime?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  // Relations
  taskId String @unique
  task   Task   @relation(fields: [taskId], references: [id], onDelete: Cascade)

  @@map("repeat_rules")
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum RepeatType {
  DAILY
  WEEKDAYS
  WEEKLY
  MONTHLY
}
